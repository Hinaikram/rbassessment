name: Build and Deploy Spring Boot App to EKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install --no-transfer-progress

      - name: Build Docker image
        run: |
          docker build -t springboot-app .

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag Docker image
        run: |
          docker tag springboot-app:latest 715841370482.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rb-ecr:latest

      - name: Push Docker image to ECR
        run: |
          docker push 715841370482.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rb-ecr:latest

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform-eks

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform-eks

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: terraform-eks

      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name rb-cluster

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f kubernetes/deployment.yaml

      - name: Update Deployment Image and Restart
        run: |
          kubectl set image deployment/springboot-app springboot-app=715841370482.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rb-ecr:latest
          kubectl rollout restart deployment/springboot-app

      - name: Check Deployment Status
        run: |
          kubectl rollout status deployment/springboot-app

  destroy-on-failure:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform-eks

      - name: Terraform Destroy on Failure
        run: terraform destroy -auto-approve
        working-directory: terraform-eks

  destroy:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()

    steps:
      - name: Wait for 5 minutes
        run: sleep 300

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform-eks

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: terraform-eks
